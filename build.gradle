/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.9/samples
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // Add JUnit dependency for testing
    testImplementation 'junit:junit:4.13.2'
}
    
// Define a task to Run a Test
task RunTest(type: Test) {
    // Specify the directory containing test classes
    testClassesDirs = sourceSets.test.output.classesDirs

    // Optionally configure test options
    testLogging {
        // Configure which events to log during test execution
        events 'passed', 'skipped', 'failed'
    }
}

// Define a task to build an executable JAR file
task BuildJar(type: Jar) {
    manifest {
    attributes 'Main-Class': 'com.example.Main' // Set the main class for the JAR
    }

    from sourceSets.main.output // Include compiled classes in the JAR
    archiveBaseName = 'my-application' // Name of the JAR file
    destinationDirectory = file('build/libs') // Output directory for the JAR file
}

// Task to copy resource files to a specific directory
task copyResources(type: Copy) {
    from 'src/main/resources'
    into 'build/resources/main'
}

// Task to create a zip archive of the project
task createZip(type: Zip) {
    from 'build'
    archiveFileName = 'project-name.zip'
    destinationDirectory = file('build/distributions')
}

task pushToGitHub(type: Exec) {
    workingDir 'build'
    // Initialize git
    commandLine 'git', 'init'
    // Execute the command
    exec {
        commandLine 'git', 'init'
    }
    // Add all files
    exec {
        commandLine 'git', 'add', '.'
    }
    // Commit the changes
    exec {
        commandLine 'git', 'commit', '-m', 'Automated deployment'
    }
    // Set the branch name
    exec {
        commandLine 'git', 'branch', '-M', 'master'
    }
    // Add the remote repository
    exec {
        commandLine 'git', 'remote', 'add', 'origin', 'https://github.com/rickytang681/Gradle.git'
    }
    // Push to the remote repository
    exec {
        commandLine 'git', 'push', '-u', 'origin', 'master'
    }
}



